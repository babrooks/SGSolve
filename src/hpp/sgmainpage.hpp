/*!
  \mainpage SGSolve Documentation

  \section introsec Introduction

  SGSolve is a software package for representing, solving, and
  analyzing the equilibria of infinitely repeated stochastic games
  with two players, perfect monitoring, and a public randomization
  device. The library implements an algorithm for computing the
  subgame perfect equilibrium payoff correspondence that was invented
  by Dilip Abreu, Ben Brooks, and Yuliy Sannikov (Abreu, Brooks, and
  Sannikov, 2016). 

  The package consists of two main components. The first piece is a
  library of C++ classes for representing and solving stochastic
  games, and the second is a graphical user interface (SGViewer) for
  using and interacting with the solver library. The purpose of this
  guide is to give advanced users an overview of how the library and
  graphical interface are structured. 

  SGSolve makes use of external software packages: the Boost libraries
  are used for serialalization of data relating to stochastic games,
  which are represented with the SGGame class and are saved as .sgm
  files, and the solutions of stochastic games that are generated by
  the algorithmm, which are represented with the SGSolution and
  SGIteration classes and are saved as .sln files. The graphical
  interface uses the Qt framework and the Qt plotting library
  QCustomPlot. 
  
  \section installsec Installation

  \section solversec The solver library

  \section viewersec The graphical interface

  \section examplesec Examples
  
*/

/*! \defgroup src SGSolve engine
  
  @brief The main solver routines.

 */

/*! \defgroup viewer SGViewer graphical interface

  @brief The graphical user interface.

  
 */
